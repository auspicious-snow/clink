package com.auspicious.snow.clink.stream.clickhouse;

import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;
import org.apache.flink.table.api.EnvironmentSettings;
import org.apache.flink.table.api.bridge.java.StreamTableEnvironment;

/**
 * @author chaixiaoxue
 * @version 1.0
 * @date 2021/9/16 15:31
 */
public class ClickHouseDemo {

    public static void main(String[] args) {
        String sourceDDL = "CREATE TABLE sc_bill_retailordergoods_dt (\n" +
            "BillDtlID        string\n"
            + ",BillID           string\n"
            + ",createTime       timestamp                                          \n"
            + ",updateTime       timestamp                                          \n"
            + ",orgId            string\n"
            + ",orgCode          string\n"
            + ",entId            string\n"
            + ",SourceID         string\n"
            + ",MapKey           string\n"
            + ",SrcTableName     string\n"
            + ",SrcKey           string\n"
            + ",SN               int\n"
            + ",mixCondition     string\n"
            + ",rowID            string\n"
            + ",orderCode        string\n"
            + ",goodsId          string\n"
            + ",pf_goodsId       string\n"
            + ",goodsCode        string\n"
            + ",goodsName        string\n"
            + ",generalName      string\n"
            + ",goodsSpec        string\n"
            + ",unit             int\n"
            + ",manufacturer     string\n"
            + ",place            string\n"
            + ",formula          int\n"
            + ",approvalNo       string\n"
            + ",gcategory        int\n"
            + ",isPrescription   int\n"
            + ",isEphe           int\n"
            + ",batchCode        string\n"
            + ",produceDate      string\n"
            + ",valDate          string\n"
            + ",avlNum           decimal(14,2)                                      \n"
            + ",num              decimal(14,2)                                         \n"
            + ",allocatedNum     decimal(14,2)                                    \n"
            + ",returnNum        decimal(14,2)                                     \n"
            + ",oldRetailP       decimal(14,6)                                      \n"
            + ",specialP         decimal(14,6)                                         \n"
            + ",retailP          decimal(14,6)                                       \n"
            + ",orgTaxCost       decimal(14,6)                                   \n"
            + ",taxPrice         decimal(14,6)                                      \n"
            + ",recAmount        decimal(14,2)                                      \n"
            + ",dedrate          decimal(14,6)                                         \n"
            + ",taxRate          decimal(14,2)                                         \n"
            + ",price            decimal(14,6)                                         \n"
            + ",amount           decimal(14,2)                                         \n"
            + ",acc_amount       decimal(14,6)                                      \n"
            + ",tax              decimal(14,2)                                         \n"
            + ",taxAmount        decimal(14,2)                                    \n"
            + ",acc_taxAmount    decimal(14,6)                                    \n"
            + ",fixedAmount      decimal(14,2)                                    \n"
            + ",collectAmount    decimal(14,2)                                      \n"
            + ",promId           string\n"
            + ",amountPromId     string\n"
            + ",disAvgAmount     decimal(14,2)                          \n"
            + ",payAvgAmount     decimal(14,2)                         \n"
            + ",cost             decimal(14,6)                       \n"
            + ",isGift           int\n"
            + ",isSpecialP       int\n"
            + ",isReturn         int\n"
            + ",taxCostAmount    decimal(14,2)            \n"
            + ",taxCost          decimal(14,4)                    \n"
            + ",actTax           decimal(14,2)                                      \n"
            + ",actAmount        decimal(14,2)                                      \n"
            + ",taxActAmount     decimal(14,2)  \n"
            + ",taxProfit        decimal(14,2)                      \n"
            + ",settleMode       int\n"
            + ",comboId          string\n"
            + ",comboNum         decimal(14,2)                                    \n"
            + ",reduceAvgAmount  decimal(14,2)                                 \n"
            + ",costAmount       decimal(14,6)                                      \n"
            + ",profit           decimal(14,2)                  \n"
            + ",hasPo             int\n"
            + ",rowNum           int\n"
            + ",refSN            int\n"
            + ",isGiftBatch      string\n"
            + ",drugsafetycode   string\n"
            + ",isMedicare       int\n"
            + ",batchId          string\n"
            + ",lotNo            string\n"
            + ",supplierName     string\n"
            + ",memPrice         decimal(14,4)                                       \n"
            + ",isCorrectP       int" +
            ") WITH (\n" +
            " 'connector' = 'kafka',\n" +
            " 'topic' = 'supplychain',\n" +
            " 'properties.bootstrap.servers' = '192.168.1.111:9092',\n" +
            " 'properties.group.id' = 'cxx',\n" +
            " 'scan.startup.mode' = 'timestamp',\n" +
            "'scan.startup.timestamp-millis' = '1631635200000',"+
            " 'format' = 'canal-json',\n" +
            " 'canal-json.ignore-parse-errors' = 'true',\n" +
            " 'canal-json.database.include' = 'SupplyChain',\n"+
            " 'canal-json.table.include' = 'sc_bill_retailordergoods_dt'"+
            ")";

        //String sinkDDL = "create table t2 (message string,u_utrace string ,ts timestamp(3) ) with ('connector' = 'print')"; 1631698561943

        /*String sql = "CREATE TABLE hTable (\n"
            + " rowkey string,\n"
            + " info ROW<user_id string,user_age string,user_sex string>,\n"
            + " PRIMARY KEY (rowkey) NOT ENFORCED\n"
            + ") WITH (\n"
            + " 'connector' = 'hbase-2.2',\n"
            + " 'table-name' = 'user_info',\n"
            + " 'zookeeper.quorum' = '192.168.3.20:2181,192.168.3.21:2181,192.168.3.22:2181,192.168.3.23:2181,192.168.3.20:2181,192.168.3.24:2181'\n"
            + ")";*/


        String mysqlSinkDDL = "CREATE TABLE t2 (\n" +

            "BillDtlID        string\n"
            + ",BillID           string\n"
            + ",createTime       timestamp                                          \n"
            + ",updateTime       timestamp                                          \n"
            + ",orgId            string\n"
            + ",orgCode          string\n"
            + ",entId            string\n"
            + ",SourceID         string\n"
            + ",MapKey           string\n"
            + ",SrcTableName     string\n"
            + ",SrcKey           string\n"
            + ",SN               int\n"
            + ",mixCondition     string\n"
            + ",rowID            string\n"
            + ",orderCode        string\n"
            + ",goodsId          string\n"
            + ",pf_goodsId       string\n"
            + ",goodsCode        string\n"
            + ",goodsName        string\n"
            + ",generalName      string\n"
            + ",goodsSpec        string\n"
            + ",unit             int\n"
            + ",manufacturer     string\n"
            + ",place            string\n"
            + ",formula          int\n"
            + ",approvalNo       string\n"
            + ",gcategory        int\n"
            + ",isPrescription   int\n"
            + ",isEphe           int\n"
            + ",batchCode        string\n"
            + ",produceDate      string\n"
            + ",valDate          string\n"
            + ",avlNum           decimal(14,2)                                      \n"
            + ",num              decimal(14,2)                                         \n"
            + ",allocatedNum     decimal(14,2)                                    \n"
            + ",returnNum        decimal(14,2)                                     \n"
            + ",oldRetailP       decimal(14,6)                                      \n"
            + ",specialP         decimal(14,6)                                         \n"
            + ",retailP          decimal(14,6)                                       \n"
            + ",orgTaxCost       decimal(14,6)                                   \n"
            + ",taxPrice         decimal(14,6)                                      \n"
            + ",recAmount        decimal(14,2)                                      \n"
            + ",dedrate          decimal(14,6)                                         \n"
            + ",taxRate          decimal(14,2)                                         \n"
            + ",price            decimal(14,6)                                         \n"
            + ",amount           decimal(14,2)                                         \n"
            + ",acc_amount       decimal(14,6)                                      \n"
            + ",tax              decimal(14,2)                                         \n"
            + ",taxAmount        decimal(14,2)                                    \n"
            + ",acc_taxAmount    decimal(14,6)                                    \n"
            + ",fixedAmount      decimal(14,2)                                    \n"
            + ",collectAmount    decimal(14,2)                                      \n"
            + ",promId           string\n"
            + ",amountPromId     string\n"
            + ",disAvgAmount     decimal(14,2)                          \n"
            + ",payAvgAmount     decimal(14,2)                         \n"
            + ",cost             decimal(14,6)                       \n"
            + ",isGift           int\n"
            + ",isSpecialP       int\n"
            + ",isReturn         int\n"
            + ",taxCostAmount    decimal(14,2)            \n"
            + ",taxCost          decimal(14,4)                    \n"
            + ",actTax           decimal(14,2)                                      \n"
            + ",actAmount        decimal(14,2)                                      \n"
            + ",taxActAmount     decimal(14,2)  \n"
            + ",taxProfit        decimal(14,2)                      \n"
            + ",settleMode       int\n"
            + ",comboId          string\n"
            + ",comboNum         decimal(14,2)                                    \n"
            + ",reduceAvgAmount  decimal(14,2)                                 \n"
            + ",costAmount       decimal(14,6)                                      \n"
            + ",profit           decimal(14,2)                  \n"
            + ",hasPo             int\n"
            + ",rowNum           int\n"
            + ",refSN            int\n"
            + ",isGiftBatch      string\n"
            + ",drugsafetycode   string\n"
            + ",isMedicare       int\n"
            + ",batchId          string\n"
            + ",lotNo            string\n"
            + ",supplierName     string\n"
            + ",memPrice         decimal(14,4)                                       \n"
            + ",isCorrectP       int" +
            ") WITH (\n" +
            "   'connector' = 'print'"+
            ")";
        /*String joinSql = " insert into t2 "
            + " SELECT "
            + "        w.rowkey"
            + "        ,mysqlTable.id"
            + "        ,w.info.user_sex as sex"
            + "        ,w.info.user_age as age "
            + "        ,mysqlTable.name"
            + " FROM mysqlTable\n"
            + " LEFT JOIN hTable FOR SYSTEM_TIME AS OF mysqlTable.proc as w\n"
            + " ON cast(mysqlTable.id as string) = w.rowkey ";*/
        String sqlDml = "insert into t2" +
            " SELECT  " +
            "BillDtlID        s\n"
            + ",BillID           \n"
            + ",createTime       \n"
            + ",updateTime       \n"
            + ",orgId            \n"
            + ",orgCode          \n"
            + ",entId            \n"
            + ",SourceID         \n"
            + ",MapKey           \n"
            + ",SrcTableName     \n"
            + ",SrcKey           \n"
            + ",SN               \n"
            + ",mixCondition     \n"
            + ",rowID            \n"
            + ",orderCode        \n"
            + ",goodsId          \n"
            + ",pf_goodsId       \n"
            + ",goodsCode        \n"
            + ",goodsName        \n"
            + ",generalName      \n"
            + ",goodsSpec        \n"
            + ",unit             \n"
            + ",manufacturer     \n"
            + ",place            \n"
            + ",formula          \n"
            + ",approvalNo       \n"
            + ",gcategory        \n"
            + ",isPrescription   \n"
            + ",isEphe           \n"
            + ",batchCode        \n"
            + ",produceDate      \n"
            + ",valDate          \n"
            + ",avlNum           \n"
            + ",num              \n"
            + ",allocatedNum     \n"
            + ",returnNum        \n"
            + ",oldRetailP       \n"
            + ",specialP         \n"
            + ",retailP          \n"
            + ",orgTaxCost       \n"
            + ",taxPrice         \n"
            + ",recAmount        \n"
            + ",dedrate          \n"
            + ",taxRate          \n"
            + ",price            \n"
            + ",amount           \n"
            + ",acc_amount       \n"
            + ",tax              \n"
            + ",taxAmount        \n"
            + ",acc_taxAmount    \n"
            + ",fixedAmount      \n"
            + ",collectAmount    \n"
            + ",promId           \n"
            + ",amountPromId     \n"
            + ",disAvgAmount     \n"
            + ",payAvgAmount     \n"
            + ",cost             \n"
            + ",isGift           \n"
            + ",isSpecialP       \n"
            + ",isReturn         \n"
            + ",taxCostAmount    \n"
            + ",taxCost          \n"
            + ",actTax           \n"
            + ",actAmount        \n"
            + ",taxActAmount     \n"
            + ",taxProfit        \n"
            + ",settleMode       \n"
            + ",comboId          \n"
            + ",comboNum         \n"
            + ",reduceAvgAmount  \n"
            + ",costAmount       \n"
            + ",profit           \n"
            + ",hasPo            \n"
            + ",rowNum           \n"
            + ",refSN            \n"
            + ",isGiftBatch      \n"
            + ",drugsafetycode   \n"
            + ",isMedicare       \n"
            + ",batchId          \n"
            + ",lotNo            \n"
            + ",supplierName     \n"
            + ",memPrice         \n"
            + ",isCorrectP       "+
            " FROM sc_bill_retailordergoods_dt " +
            "";
        final StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();
        env.setParallelism(1);
        //env.enableCheckpointing(5000);
        EnvironmentSettings settings = EnvironmentSettings.newInstance().useBlinkPlanner().inStreamingMode().build();
        StreamTableEnvironment streamTableEnvironment = StreamTableEnvironment.create(env,settings);
        streamTableEnvironment.executeSql(sourceDDL);
        streamTableEnvironment.executeSql(mysqlSinkDDL);
        streamTableEnvironment.executeSql(sqlDml);



    }

}
